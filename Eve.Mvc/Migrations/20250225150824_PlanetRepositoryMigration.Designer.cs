// <auto-generated />
using System;
using Eve.Repositories.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EveOnlineMarket.Migrations
{
    [DbContext(typeof(EveDbContext))]
    [Migration("20250225150824_PlanetRepositoryMigration")]
    partial class PlanetRepositoryMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Eve.Models.EveApi.EveType", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "type_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TypeId"));

                    b.Property<int>("MarketGroupId")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "market_group_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TypeId");

                    b.ToTable("Type", (string)null);
                });

            modelBuilder.Entity("Eve.Models.EveApi.Order", b =>
                {
                    b.Property<long>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "order_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("OrderId"));

                    b.Property<int>("Duration")
                        .HasColumnType("integer");

                    b.Property<decimal>("Escrow")
                        .HasColumnType("numeric");

                    b.Property<bool>("IsBuyOrder")
                        .HasColumnType("boolean")
                        .HasAnnotation("Relational:JsonPropertyName", "is_buy_order");

                    b.Property<DateTime>("Issued")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("LocationId")
                        .HasColumnType("bigint")
                        .HasAnnotation("Relational:JsonPropertyName", "location_id");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("TypeId")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "type_id");

                    b.Property<int>("VolumeRemain")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "volume_remain");

                    b.Property<int>("VolumeTotal")
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "volume_total");

                    b.HasKey("OrderId");

                    b.ToTable("MarketOrder", (string)null);
                });

            modelBuilder.Entity("Eve.Models.EveApi.Planet", b =>
                {
                    b.Property<int>("PlanetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Relational:JsonPropertyName", "planet_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PlanetId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PlanetId");

                    b.ToTable("Planet", (string)null);
                });

            modelBuilder.Entity("Eve.Models.Users.User", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("UserId"));

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AuthorizationCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BearerToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ClientSecret")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("TokenExpirationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("TokenGrantedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserId");

                    b.ToTable("User", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
